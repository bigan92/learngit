sum(is.na.data.frame(test2))
prediction.rfmodel <- predict(rfmodel, test2)
test2=test[,c(2,4,7,11)]
sum(is.na.data.frame(test2))
prediction.rfmodel <- predict(rfmodel, test2)
test2=test[,c(2,4,6,7)]
sum(is.na.data.frame(test2))
prediction.rfmodel <- predict(rfmodel, test2)
View(test2)
View(train)
library("randomForest")
library("ggplot2")
library("dplyr")
train=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\train.csv",header = TRUE,stringsAsFactors = FALSE)
test=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\test.csv",header = TRUE,stringsAsFactors = FALSE)
summary(train)
train$Survived <- as.logical(train$Survived)
for(i in c(3,5,12)) {
train[,i] <- as.factor(train[,i])
test[,i-1]<-as.factor(test[,i-1])
}
sum(is.na(train$Age))
rfmodel=randomForest(Survived~Pclass+Sex+ SibSp +Parch, data = train)
rfmodel
vi = varImpPlot(rfmodel)
vi
test2=test[,c(2,4,6,7)]
sum(is.na.data.frame(test2))
prediction.rfmodel <- predict(rfmodel, test2)
prediction.rfmodel
class(prediction.rfmodel)
prediction.rfmodel[prediction.rfmodel>=0.5]<-1
prediction.rfmodel[prediction.rfmodel<0.5]<-0
gender_submission=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\gender_submission.csv",header = TRUE,stringsAsFactors = FALSE)
full0=bind_rows(gender_submission,prediction.rfmodel)
View(full0)
prediction.rfmodel <- predict(rfmodel, test2)
pre<-write.csv(prediction.rfmodel)
write.csv(prediction.rfmodel,file = "C:\\Users\\bigan\\Documents\\Titanic\\pre.csv")
prediction.rfmodel$x
prediction.rfmodel
prediction.rfmodel[prediction.rfmodel>=0.5]<-1
prediction.rfmodel[prediction.rfmodel<0.5]<-0
prediction.rfmodel
solution3 <- data.frame(PassengerID = test$PassengerId, Survived = prediction.rfmodel)
View(solution3)
full0=bind_rows(gender_submission,solution3)
View(full0)
full0=cind_rows(gender_submission,solution3)
full0=bind_cols(gender_submission,solution3)
View(full0)
write.csv(full0,file = "C:\\Users\\bigan\\Documents\\Titanic\\pre.csv")
solution3 <- data.frame(PassengerID = test$PassengerId, Survived_pre= prediction.rfmodel)
full0=bind_cols(gender_submission,solution3)
write.csv(full0,file = "C:\\Users\\bigan\\Documents\\Titanic\\pre.csv")
table(full0$Survived,full0$Survived_pre)
tab=table(full0$Survived,full0$Survived_pre)
summary(tab)
(264+144)/nrow(test)
library("randomForest")
library("ggplot2")
library("dplyr")
train=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\train.csv",header = TRUE,stringsAsFactors = FALSE)
test=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\test.csv",header = TRUE,stringsAsFactors = FALSE)
gender_submission=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\gender_submission.csv",header = TRUE,stringsAsFactors = FALSE)
train$Survived <- as.logical(train$Survived)
for(i in c(3,5,12)) {
train[,i] <- as.factor(train[,i])
test[,i-1]<-as.factor(test[,i-1])
}
sum(is.na(train$Age))
rfmodel=randomForest(Survived~Pclass+Sex+ SibSp +Parch, data = train)
rfmodel
vi = varImpPlot(rfmodel)
vi
test2=test[,c(2,4,6,7)]
sum(is.na.data.frame(test2))
nrow(test2)
prediction.rfmodel <- predict(rfmodel, test2)
prediction.rfmodel[prediction.rfmodel>=0.5]<-1
prediction.rfmodel[prediction.rfmodel<0.5]<-0
prediction.rfmodel
solution3 <- data.frame(PassengerID = test$PassengerId, Survived_pre= prediction.rfmodel)
full0=bind_cols(gender_submission,solution3)
write.csv(full0,file = "C:\\Users\\bigan\\Documents\\Titanic\\pre.csv")
tab=table(full0$Survived,full0$Survived_pre)
tab
(264+144)/nrow(test)
train_pre=predict(rfmodel,data=train[,c(3,5,7,8)])
train_pre[train_pre>=0.5]<-1
train_pre[train_pre<0.5]<-0
table(train$Survived,train_pre)
train_pre=predict(rfmodel,data=train[,c(3,5,7,8)])
train_pre
train_pre[train_pre>=0.5]<-1
train_pre[train_pre<0.5]<-0
train_pre
table(train$Survived,train_pre)
( 499+208)/nrow(train)
table(train$Survived,train_pre)
tab
?mice
library('e1071') #Naive Bayes classification
install.packages("e1071")
library('mice') # imputation
install.packages("mice")
?mice
library('mice') # imputation
system("ls ../input")
?mice
install.packages("VIM")
importance <- importance(rfmodel)
importance(rfmodel)
ggplot(data=train, aes(x=Age, y=Pclass, color=Survived)) +
geom_jitter(position = position_jitter(height = .1)) +
scale_color_manual(values=c("red", "blue")) + facet_grid(Sex ~ .) +
ggtitle("Age, Sex, and Class as Survival Factors") + ylab("Pclass")
library("randomForest")
library("ggplot2")
library("dplyr")
library('e1071') #Naive Bayes classification
library('mice') # imputation
system("ls ../input")
?mice
train=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\train.csv",header = TRUE,stringsAsFactors = FALSE)
test=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\test.csv",header = TRUE,stringsAsFactors = FALSE)
gender_submission=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\gender_submission.csv",header = TRUE,stringsAsFactors = FALSE)
summary(train)
train$Survived <- as.logical(train$Survived)
for(i in c(3,5,12)) {
train[,i] <- as.factor(train[,i])
test[,i-1]<-as.factor(test[,i-1])
}
sum(is.na(train$Age))
rfmodel=randomForest(Survived~Pclass+Sex+ SibSp +Parch, data = train)
rfmodel
vi = varImpPlot(rfmodel)
vi
?varImpPlot
sum(is.na.data.frame(test2))
?varImpPlot
test2=test[,c(2,4,6,7)]
sum(is.na.data.frame(test2))
prediction.rfmodel <- predict(rfmodel, test2)
prediction.rfmodel[prediction.rfmodel>=0.5]<-1
prediction.rfmodel[prediction.rfmodel<0.5]<-0
prediction.rfmodel
solution3 <- data.frame(PassengerID = test$PassengerId, Survived_pre= prediction.rfmodel)
full0=bind_cols(gender_submission,solution3)
write.csv(full0,file = "C:\\Users\\bigan\\Documents\\Titanic\\pre.csv")
tab=table(full0$Survived,full0$Survived_pre)
tab
264/(264+8)
sum(is.na(train$Age))
sum(is.na(test$Age))
install.packages("dplyr")
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
full<-bind_rows(train,test)
library("dplyr")
install.packages("dplyr")
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
full<-bind_rows(train,test)
library("dplyr")
full<-bind_rows(train,test)
View(full)
install.packages("scales")
install.packages("ggthemes")
# visualization
library("ggplot2")
library('ggthemes')
library('scales')
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
table(full$Sex, full$Title)
ssification algorithm
library("randomForest")
# visualization
library("ggplot2")
library('ggthemes')
library('scales')
# data manipulation
library("dplyr")
library('e1071') #Naive Bayes classification
library('mice') # imputation
system("ls ../input")
?mice
train=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\train.csv",header = TRUE,stringsAsFactors = FALSE)
test=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\test.csv",header = TRUE,stringsAsFactors = FALSE)
gender_submission=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\gender_submission.csv",header = TRUE,stringsAsFactors = FALSE)
summary(train)
full<-bind_rows(train,test)
##处理数据
train$Survived <- as.logical(train$Survived)
#levels(train$Survived) <- c("Not survived", "Survived")
# Grab title from passenger names
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
# Show title counts by sex
table(full$Sex, full$Title)
# make explicit factor levels for specific variables: 3=Pclass, 5=Sex, 12=Embarked
for(i in c(3,5,12)) {
train[,i] <- as.factor(train[,i])
test[,i-1]<-as.factor(test[,i-1])
}
#Age 有缺失值
sum(is.na(train$Age))
sum(is.na(test$Age))
# + train$Age
rfmodel=randomForest(Survived~Pclass+Sex+ SibSp +Parch, data = train)
rfmodel
vi = varImpPlot(rfmodel)
vi
?varImpPlot
test2=test[,c(2,4,6,7)]
#View(test2);
sum(is.na.data.frame(test2))
prediction.rfmodel <- predict(rfmodel, test2)
prediction.rfmodel[prediction.rfmodel>=0.5]<-1
prediction.rfmodel[prediction.rfmodel<0.5]<-0
prediction.rfmodel
solution3 <- data.frame(PassengerID = test$PassengerId, Survived_pre= prediction.rfmodel)
(sum(is.na(train$Age))+sum(is.na(test$Age)))/nrow(full)
library(rpart.plot)
install.packages("rpart.plot")
install.packages("rpart")
library("caret")
install.packages("caret")
library("rpart")
library("caret")
library("rpart")
library("caret")
install.packages("rpart")
library("rpart")
library("caret")
install.packages("gbm")
plot(rfmodel)
# classification algorithm
library("randomForest")
# visualization
library("ggplot2")
library('ggthemes')
library('scales')
# data manipulation
library("dplyr")
library('e1071') #Naive Bayes classification
library('mice') # imputation
library("rpart.plot")
library("rpart")
library("caret")
modelaccuracy <- function(test, rpred) {
result_1 <- test$Survived == rpred
sum(result_1) / length(rpred)
}
system("ls ../input")
?mice
train=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\train.csv",header = TRUE,stringsAsFactors = FALSE)
test=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\test.csv",header = TRUE,stringsAsFactors = FALSE)
gender_submission=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\gender_submission.csv",header = TRUE,stringsAsFactors = FALSE)
summary(train)
full<-bind_rows(train,test)
##处理数据
train$Survived <- as.logical(train$Survived)
#levels(train$Survived) <- c("Not survived", "Survived")
# Grab title from passenger names
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
# Show title counts by sex
table(full$Sex, full$Title)
# make explicit factor levels for specific variables: 3=Pclass, 5=Sex, 12=Embarked
for(i in c(3,5,12)) {
train[,i] <- as.factor(train[,i])
test[,i-1]<-as.factor(test[,i-1])
}
#Age 有缺失值 且占比0.2，考虑删除还是填补
(sum(is.na(train$Age))+sum(is.na(test$Age)))/nrow(full)
# + train$Age
rfmodel=randomForest(Survived~Pclass+Sex+ SibSp +Parch, data = train)
rfmodel
vi = varImpPlot(rfmodel)
vi
?varImpPlot
plot(rfmodel)
# classification algorithm
library("randomForest")
# visualization
library("ggplot2")
library('ggthemes')
library('scales')
# data manipulation
library("dplyr")
library('e1071') #Naive Bayes classification
library('mice') # imputation
library("rpart.plot")
library("rpart")
library("caret")
train=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\train.csv",header = TRUE,stringsAsFactors = FALSE)
test=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\test.csv",header = TRUE,stringsAsFactors = FALSE)
gender_submission=read.csv("C:\\Users\\bigan\\Documents\\Titanic\\gender_submission.csv",header = TRUE,stringsAsFactors = FALSE)
summary(train)
full<-bind_rows(train,test)
ggplot(data=train,aes(x=1+SibSp+Parch,y=Pclass,color=Survived))
+ ggtitle("family scale, Sex, and Class as Survival Factors") + ylab("Pclass")
train$familyscale=train$SibSp+train$Parch+1
ggplot(data=train,aes(x=familyscale,y=Pclass,color=Survived))
ggplot(data=train,aes(x=familyscale,y=Pclass,color=Survived))
+ ggtitle("family scale, Sex, and Class as Survival Factors") + ylab("Pclass")
ggplot(data=train,aes(x=familyscale,y=Pclass,color=Survived))
+geom_point()
ggplot(data=train,aes(x=familyscale,y=Pclass,color=Survived))+geom_point()+ ggtitle("family scale, Sex, and Class as Survival Factors") + ylab("Pclass")
ggplot(data=train,aes(x=familyscale,y=Pclass,color=Survived))+
geom_jitter(position = position_jitter(height = .1)) +
scale_color_manual(values=c("red", "blue")) + facet_grid(Sex ~ .) +
ggtitle("family scale, Sex, and Class as Survival Factors") + ylab("Pclass")
ggplot(data=train,aes(x=familyscale,y=Pclass,color=Survived))+
scale_color_manual(values=c("red", "blue")) + facet_grid(Sex ~ .) +
ggtitle("family scale, Sex, and Class as Survival Factors") + ylab("Pclass")
ggplot(data=train,aes(x=familyscale,y=Pclass,color=Survived))+
geom_point()
ggplot(data=train, aes(x=Age, y=Pclass, color=Survived)) +
geom_jitter(position = position_jitter(height = .1)) +
scale_color_manual(values=c("red", "blue")) + facet_grid(Sex ~ .) +
ggtitle("Age, Sex, and Class as Survival Factors") + ylab("Pclass")
train$Survived <- as.logical(train$Survived)
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
table(full$Sex, full$Title)
for(i in c(3,5,12)) {
train[,i] <- as.factor(train[,i])
test[,i-1]<-as.factor(test[,i-1])
}
(sum(is.na(train$Age))+sum(is.na(test$Age)))/nrow(full)
ggplot(data=train,aes(x=familyscale,y=Pclass,color=Survived))+
geom_jitter(position = position_jitter(height = .1)) +
scale_color_manual(values=c("red", "blue")) + facet_grid(Sex ~ .) +
ggtitle("family scale, Sex, and Class as Survival Factors") + ylab("Pclass")
setwd(r'C:\Users\bigan\learngit\Titanic')
setwd('C:\Users\bigan\learngit\Titanic')
setwd('C:\\Users\\bigan\\learngit\\Titanic')
train=read.csv("train.csv",header = TRUE,stringsAsFactors = FALSE)
naiveBayesModel <- naiveBayes(Survived ~ Pclass + Sex + SibSp + Parch + FamilySize, data = train)
naiveBayesModel <- naiveBayes(Survived ~ Pclass + Sex + SibSp + Parch + Familyscale, data = train)
naiveBayesModel <- naiveBayes(Survived ~ Pclass + Sex + SibSp + Parch + familyscale, data = train)
naiveBayesModel <- naiveBayes(Survived ~ Pclass + Sex + SibSp + Parch + familyscale, data = train)
train=read.csv("train.csv",header = TRUE,stringsAsFactors = FALSE)
test=read.csv("test.csv",header = TRUE,stringsAsFactors = FALSE)
gender_submission=read.csv("gender_submission.csv",header = TRUE,stringsAsFactors = FALSE)
summary(train)
full<-bind_rows(train,test)
train$familyscale=train$SibSp+train$Parch+1
train$Survived <- as.logical(train$Survived)
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
table(full$Sex, full$Title)
for(i in c(3,5,12)) {
train[,i] <- as.factor(train[,i])
test[,i-1]<-as.factor(test[,i-1])
}
ggplot(data=train,aes(x=familyscale,y=Pclass,color=Survived))+
geom_jitter(position = position_jitter(height = .1)) +
scale_color_manual(values=c("red", "blue")) + facet_grid(Sex ~ .) +
ggtitle("family scale, Sex, and Class as Survival Factors") + ylab("Pclass")
(sum(is.na(train$Age))+sum(is.na(test$Age)))/nrow(full)
rfmodel=randomForest(Survived~Pclass+Sex+ SibSp +Parch, data = train)
rfmodel
vi = varImpPlot(rfmodel)
vi
?varImpPlot
plot(rfmodel)
test2=test[,c(2,4,6,7)]
sum(is.na.data.frame(test2))
prediction.rfmodel <- predict(rfmodel, test2)
prediction.rfmodel[prediction.rfmodel>=0.5]<-1
prediction.rfmodel[prediction.rfmodel<0.5]<-0
prediction.rfmodel
solution3 <- data.frame(PassengerID = test$PassengerId, Survived_pre= prediction.rfmodel)
full0=bind_cols(gender_submission,solution3)
write.csv(full0,file = "C:\\Users\\bigan\\Documents\\Titanic\\pre.csv")
tab=table(full0$Survived,full0$Survived_pre)
tab
(264+144)/nrow(test)
modelaccuracy(test,solution3)
modelaccuracy(gender_submission,solution3)
result_1 <- test == rpred
modelaccuracy<- function(rpred,test=test) {
result_1 <- test == rpred
sum(result_1) / length(rpred)
}
modelaccuracy(gender_submission,solution3)
modelaccuracy<- function(rpred,test=test) {
result_1 <- test == rpred
sum(result_1)/length(rpred)
}
modelaccuracy(gender_submission,solution3)
modelaccuracy<- function(rpred,test=test) {
result_1 <- test == rpred
accuary<-sum(result_1)/length(rpred)
accuary
}
modelaccuracy<- function(rpred,gender_submission) {
result_1 <- gender_submission == rpred
accuary<-sum(result_1)/length(rpred)
accuary
}
modelaccuracy(solution3)
modelaccuracy(solution3,gender_submission)
modelaccuracy<- function(rpred,gender_submission) {
result_1 <- gender_submission == rpred
accuary<-sum(result_1)/length(rpred)
return(accuary)
}
modelaccuracy(solution3,gender_submission)
modelaccuracy<- function(rpred,gender_submission) {
result_1 <- gender_submission == rpred
accuary<-sum(result_1)/length(rpred)
return(result_1)
}
modelaccuracy(solution3,gender_submission)
modelaccuracy(prediction.rfmodel,gender_submission)
modelaccuracy<- function(rpred,gender_submission) {
result_1 <- gender_submission$Survived == rpred
accuary<-sum(result_1)/length(rpred)
return(accuary)
}
modelaccuracy(prediction.rfmodel,gender_submission)
(264+144)/nrow(test)
tab
modelaccuracy<- function(rpred,gender_submission) {
result_1 <- gender_submission$Survived == rpred
accuary<-sum(result_1)/length(rpred)
return(result_1)
}
modelaccuracy(prediction.rfmodel,gender_submission)
solution1 <- data.frame(PassengerID = test$PassengerId, Survived_pre= prediction.rfmodel)
full0=bind_cols(gender_submission,solution1)
write.csv(full0,file = "pre.csv")
tab=table(full0$Survived,full0$Survived_pre)
tab
(264+142)/nrow(test)
modelaccuracy<- function(rpred,gender_submission) {
result_1 <- gender_submission$Survived == rpred
accuary<-sum(result_1)/length(rpred)
return(accuary)
}
modelaccuracy(prediction.rfmodel,gender_submission)
naiveBayesModel <- naiveBayes(Survived ~ Pclass + Sex + SibSp + Parch + familyscale, data = train)
summary(naiveBayesModel)
test3=test2
test3$familyscale=test2$SibSp+test2$Parch
View(test3)
predict.NaiveBayes <- predict(naiveBayesModel,test3)
solution2<- data.frame(PassengerID = test$PassengerId, Survived = predict.NaiveBayes)
full2<-bind_cols(gender_submission,solution2)
write.csv(full2,"NaiveBayes.csv")
modelaccuracy(predict.NaiveBayes,gender_submission)
View(train)
ncol(train)
predict_nb_train<-predict(naiveBayesModel,train[,c(3,5,7,8,13)])
modelaccuracy(predict_nb_train,train$Survived)
modelaccuracy(predict_nb_train,train)
install.packages(c("car", "curl", "htmlwidgets", "httpuv", "ks", "TTR", "xts"))
install.packages("cpart")
install.packages("rpart")
rpart_model<-rpart(Survived ~Pclass + Sex + SibSp + Parch + familyscale, data = train)
library("rpart")
library("rpart.plot")
library("caret")
rpart_model<-rpart(Survived ~Pclass + Sex + SibSp + Parch + familyscale, data = train)
predict.rpart<-predict(rpart_model,test3)
rpart.plot(rpart_model)
predict_rpart<-predict(rpart_model,test3)
modelaccuracy(predict_rpart,gender_submission)
predict_rpart
predict_rpart[predict_rpart<0.5]<-0
predict_rpart[predict_rpart>=0.5]<-1
modelaccuracy(predict_rpart,gender_submission)
predict_rp_train<-predict(rpart_model,train[,c(3,5,7,8,13)])
modelaccuracy(predict_rp_train,train)
predict_rp_train[predict_rp_train>=0.5]<-1
predict_rp_train[predict_rp_train<0.5]<-0
modelaccuracy(predict_rp_train,train)
rpart_model<-rpart(Survived ~Pclass + Sex + SibSp + Parch + familyscale, data = train,method=exp)
str(train)
str(test3)
rpart_model<-rpart(Survived ~Pclass + Sex + SibSp + Parch + familyscale, data = train,method=exp)
rpart_model<-rpart(Survived ~Pclass + Sex + SibSp + Parch + familyscale, data = train,method="exp")
rpart.plot(rpart_model)
predict_rpart<-predict(rpart_model,test3)
predict_rpart
predict_rpart<-predict(rpart_model,test3,type="exp")
predict_rpart<-predict(rpart_model,test3,method="exp")
predict_rpart
predict_rpart[predict_rpart>=0.5]<-1
predict_rpart[predict_rpart<0.5]<-0
modelaccuracy(predict_rpart,gender_submission)
predict_rp_train<-predict(rpart_model,train[,c(3,5,7,8,13)])
predict_rp_train[predict_rp_train>=0.5]<-1
predict_rp_train[predict_rp_train<0.5]<-0
modelaccuracy(predict_rp_train,train)
solution3<- data.frame(PassengerID = test$PassengerId, Survived = predict_rp_train)
solution3<- data.frame(PassengerID = test$PassengerId, Survived = predict_rpart)
full3=bind_cols(gender_submission,solution3)
bind_cols
full3=bind_cols(gender_submission,solution3)
library('scales')
library("dplyr")
library('e1071') #Naive Bayes classification
library('mice') # imputation
library("rpart.plot")
library("rpart") #rpart
library("caret")
full3=bind_cols(gender_submission,solution3)
write.csv(full3,"rpart_result.csv")
text(rpart_model,use.n=T,all=T,cex=0.9)
rpart.plot(rpart_model)
text(rpart_model,use.n=T,all=T,cex=0.9)
plot(rpart_model)
text(rpart_model,use.n=T,all=T,cex=0.9)
